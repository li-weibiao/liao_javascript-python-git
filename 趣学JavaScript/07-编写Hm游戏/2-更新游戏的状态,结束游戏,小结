更新游戏的状态：
在else语句中添加以下代码：
for (var j = 0; j < word.length; j++) { if (word[j] === guess) { answerArray[j] = guess; remainingLetters--;}}

7.3.4 结束游戏
主游戏循环条件是remainingLetters > 0，所以，一旦remainingLetters为0，将跳出这个循环。使用如下代码结束游戏：
alert(answerArray.join(" "));
alert("干得漂亮！这个单词是 " + word);

第一行使用alert方法展示最终的answerArray数组。
第二行再次使用alert来祝贺玩家获胜。

7.4 游戏代码
hangman.html:
<!DOCTYPE html>
<html>
<head>
	<title>Hangman!</title>
</head>
<body>
	<h1>猜单词游戏</h1>
	<script type="text/javascript">
	//创建一个变量来记录单词组
	var words = ["pen", "good", "red", "moon"];
	//获得一个随机单词
	var word = words[Math.floor(Math.random() * words.length)];
	//创建一个变量来记录答案
	var answerArray = [];
	for (var i = 0; i < word.length; i++) { answerArray[i] = "_"; }
	var remainingLetters = word.length;
	//游戏主体程序
	while (remainingLetters > 0) {
		//提示游戏进度
		alert(answerArray.join(" "));
		//从玩家那里得到一个猜测的字母
		var guess = prompt("请猜测一个字母，或者点击取消按钮来停止游戏");
		if (guess === null) { 
			//离开游戏
			break;
		} else if (guess.length !== 1) { alert("请输入一个字母。"); 
		} else { 
			//更新游戏的状态和玩家的猜测情况
			for (var j = 0; j < word.length; j++) { if (word[j] === guess) { answerArray[j] = guess; remainingLetters--;}}
	}
	//游戏主体程序结束
	}

	//展示答案并祝贺玩家
	alert(answerArray.join(" "));
	alert("干得漂亮！这个单词是 " + word);
	</script>
</body>
</html>

7.5 小结
循环和条件对于创建游戏或者任何其他的计算机交互程序来说必不可少。没有这些控制结构，程序只能是从头到尾的运行。

