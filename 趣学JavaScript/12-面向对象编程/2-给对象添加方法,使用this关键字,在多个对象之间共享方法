12.2 给对象添加方法
除了字符串，数字和布尔类型，还可以将函数保存为对象中的一个属性。
当将函数保存为对象中的一个属性的时候，该属性称为方法。

如何创建自己的方法？一种方法是，使用点符号给对象添加一种方法。例如：
dog.bark = function(){ console.log("我的名字是 " + this.name + "!");};
dog.bark();
我的名字是 老王!  //这里是延用了上一个例子的设置

注意，该函数使用了this.name，这会访问在对象的name属性中存储的值。

12.2.1 使用this关键字
可以在方法中使用this关键字来引用对象，而这个对象是当前在其上调用方法的对象。
例如，当中dog对象上调用bark方法的时候，this引用的就是dog对象，因此this.name引用dog.name。

12.2.2 在多个对象之间共享方法
我们创建一个新的名为speak的函数，在表示不同动物的多个对象中，可以将其用作方法。当在一个对象上调用speak时，它将使用对象的名字(this.name),并且用该动物的叫声(this.sound)来显示一条消息。
var speak = function(){ console.log(this.sound + "! 我的名字是 " + this.name + "!");};

现在，创建另一个对象，以便可以将speak作为一个方法添加给它：
var cat = { sound:"喵", name:"小花", speak:speak};

我们将speak函数赋值给了这个对象。现在cat.speak是一个方法，可以输入cat.speak()来调用它。
由于在方法中使用了this关键字，当我们在其上调用cat的时候，它将会访问cat对象的属性。
cat.speak();
喵! 我的名字是 小花!

当调用cat.speak方法的时候，它访问来自cat对象的两个属性:cat.speak(其值为"喵")和this.name(其值为"小花")。

每当this出现在一个方法中的时候，它引用的是在其上调用该方法的那个对象。

要在多个对象之间共享方法，可以直接将方法添加到每一个对象中，就像我们对speak所做的那样。
